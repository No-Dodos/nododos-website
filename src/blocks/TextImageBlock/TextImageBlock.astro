---
import type { StructuredText } from 'datocms-structured-text-utils';
import type { TextImageBlockFragment } from '@lib/types/datocms';
import Text from '@blocks/TextBlock/Text.astro';
import Image from '@blocks/ImageBlock/Image.astro';

interface Props {
  block: TextImageBlockFragment
}
const { block } = Astro.props;
const imageParams =
  block.style === 'circle'
    ? { ar: '1:1', fit: 'crop' }
    : {};
---

<div class="component">
  <div class:list={['layout', `layout--${block.layout}`]}>
    <div class="layout__item text">
      <Text data={ block.text as StructuredText } />
    </div>
    <div class:list={['layout__item', 'image', `image--${block.style}`]}>
      <Image image={ block.image } params={ imageParams } />
    </div>
  </div>
</div>

<style>
/* turn component into a container, so styles can be applied relative to its dimensions: */
.component {
  container-type: inline-size;
  container-name: component;
}

/* side-by-side layout, if component is wide enough: */
@container component (min-width: 760px) {
  .layout {
    display: flex;
    align-items: center;
  }
  .layout--text-image {
    flex-direction: row;
  }
  .layout--image-text {
    flex-direction: row-reverse;
  }
  .layout__item {
    flex: 1;
    width: 50%;
  }
  .image--circle :global(figure) {
    max-width: 500px;
  }
  .layout--text-image .image--circle :global(figure) {
    margin-inline-start: auto;
  }
  .layout--image-text .image--circle :global(figure) {
    margin-inline-end: auto;
  }
}

.layout :global(h1, h2) {
  max-width: 500px;
}

.image--circle :global(img) {
  aspect-ratio: 1 !important;
  border-radius: 50%;
  overflow: hidden;
}
</style>
